import{u as k}from"./utils-B12J7iWK.js";import{_ as F,c as V,b as c,a as i,e as p,f,w as s,r as a,o as u,d as r,F as L,l as T}from"./index-tWRnQmOK.js";const x={name:"Menu",data(){return{menuDialogVisible:!1,menuTreeData:[],selectedMenuIds:[],defaultProps:{children:"children",label:"name"},selectedRoleId:0,apiTreeData:[],selectedApsIds:[],defaultApiProps:{children:"children",label:"label"},showModel:!1,apiList:[],dialogTitle:"新增角色",apiDialogVisible:!1,roleList:[],buttons:[],rules:{name:[{required:!0,message:"请输入角色名称",trigger:"blur"},{min:2,max:8,message:"长度在2-8个字符",trigger:"blur"}]},roleForm:{},columns:[{label:"角色名称",prop:"name",width:180},{label:"描述",prop:"desc"},{label:"创建人",prop:"create_by"},{label:"创建时间",prop:"formattedCreatedAt"}]}},mounted(){this.getRoleList(),this.getApiList(),this.buttons=this.getMenuButton()},methods:{async getRoleList(){try{let t=await this.$api.getRoleList();(h=>{h.forEach(_=>{_.formattedCreatedAt=k.formatDate(_.CreatedAt)})})(t),this.roleList=t}catch(t){console.log(t)}},createRole(){this.showModel=!0},createRoleClose(){this.showModel=!1,this.$refs.dialogForm.resetFields()},async createRoleSubmit(){try{this.dialogTitle==="编辑角色"?await this.$api.updateRole(this.roleForm.id,this.roleForm):(await this.$api.createRole(this.roleForm),console.log("创建角色"))}catch(t){console.error("操作失败",t);return}await this.getRoleList(),this.createRoleClose()},async delRole(t){await this.$api.delRole(t),await this.getRoleList()},async updateRole(t){this.showModel=!0,Object.assign(this.roleForm,t),this.roleForm.users=[],this.roleForm.menus=[],this.dialogTitle="编辑角色"},async bindMenu(t){this.selectedRoleId=t.id;try{this.selectedMenuIds=[],this.menuTreeData=await this.$api.getMenuList();const{menus:e}=await this.$api.getRoleInfo(this.selectedRoleId);this.selectedMenuIds=e.map(h=>h.id),this.menuDialogVisible=!0}catch{this.$message.error("获取菜单数据失败")}},async saveMenuAuth(){if(this.selectedRoleId<=0){this.$message.error("授权失败，菜单不存在");return}try{const t=this.$refs.menuTree.getCheckedKeys();await this.$api.updateRole(this.selectedRoleId,{menus:t}),this.menuDialogVisible=!1,this.selectedMenuIds=[],this.selectedRoleId=0,await this.getRoleList()}catch(t){console.log(t)}},async bindApi(t){this.selectedRoleId=t.id,this.selectedApsIds=[];try{this.apiTreeData=k.transformApiData(this.apiList);let e=await this.$api.getRBACFromRoleID(t.id);this.selectedApsIds=e,this.apiDialogVisible=!0}catch(e){console.error(e)}},async getApiList(){try{const t=await this.$api.getApiList();this.apiList=t}catch(t){console.log(t)}},async saveApiAuth(){try{const t=this.$refs.apiTree.getCheckedKeys().filter(e=>typeof e=="number");await this.$api.createRBAC(this.selectedRoleId,{apis_id:t}),this.apiDialogVisible=!1,this.selectedApsIds=[],this.selectedRoleId=0,await this.getRoleList()}catch(t){console.error(t)}},handleDialogClose(){this.createRoleClose()},async changeRoleStatus(t){try{const e=t.id;await this.$api.updateRole(e,{status:t.status})}catch(e){console.error(e)}},getMenuButton(){return k.getMenuButton()}}},B={class:"user-manage"},U={class:"base-table"},z={class:"action"},N={class:"dialog-footer"},P={class:"dialog-footer"},S={class:"dialog-footer"};function E(t,e,h,_,l,n){const d=a("el-button"),g=a("el-table-column"),D=a("el-switch"),A=a("el-popconfirm"),v=a("el-table"),w=a("el-input"),b=a("el-form-item"),C=a("el-radio"),I=a("el-radio-group"),M=a("el-form"),y=a("el-dialog"),R=a("el-tree");return u(),V("div",B,[c("div",U,[c("div",z,[l.buttons.includes("roleCreate")?(u(),p(d,{key:0,type:"primary",onClick:n.createRole},{default:s(()=>e[8]||(e[8]=[r("新增")])),_:1,__:[8]},8,["onClick"])):f("",!0)]),i(v,{data:l.roleList,"row-key":"id"},{default:s(()=>[(u(!0),V(L,null,T(l.columns,o=>(u(),p(g,{key:o.prop,prop:o.prop,label:o.label,width:o.width,formatter:o.formatter},null,8,["prop","label","width","formatter"]))),128)),i(g,{label:"状态"},{default:s(o=>[i(D,{modelValue:o.row.status,"onUpdate:modelValue":m=>o.row.status=m,"active-value":1,"inactive-value":2,onChange:m=>n.changeRoleStatus(o.row),disabled:o.row.name=="admin"},null,8,["modelValue","onUpdate:modelValue","onChange","disabled"])]),_:1}),i(g,{label:"操作","min-width":"150"},{default:s(o=>[l.buttons.includes("roleEdit")?(u(),p(d,{key:0,type:"primary",size:"small",onClick:m=>n.updateRole(o.row)},{default:s(()=>e[9]||(e[9]=[r("编辑")])),_:2,__:[9]},1032,["onClick"])):f("",!0),l.buttons.includes("roleMenu")?(u(),p(d,{key:1,type:"primary",size:"small",onClick:m=>n.bindMenu(o.row)},{default:s(()=>e[10]||(e[10]=[r("菜单权限")])),_:2,__:[10]},1032,["onClick"])):f("",!0),l.buttons.includes("roleApi")?(u(),p(d,{key:2,type:"primary",size:"small",onClick:m=>n.bindApi(o.row)},{default:s(()=>e[11]||(e[11]=[r("接口权限")])),_:2,__:[11]},1032,["onClick"])):f("",!0),i(A,{title:"确定删除角色吗?",onConfirm:m=>n.delRole(o.row.id)},{reference:s(()=>[l.buttons.includes("roleDelete")?(u(),p(d,{key:0,type:"danger",size:"small"},{default:s(()=>e[12]||(e[12]=[r("删除")])),_:1,__:[12]})):f("",!0)]),_:2},1032,["onConfirm"])]),_:1})]),_:1},8,["data"])]),i(y,{title:l.dialogTitle,modelValue:l.showModel,"onUpdate:modelValue":e[3]||(e[3]=o=>l.showModel=o),onClose:n.handleDialogClose},{footer:s(()=>[c("div",N,[i(d,{onClick:n.createRoleClose},{default:s(()=>e[15]||(e[15]=[r("取消")])),_:1,__:[15]},8,["onClick"]),i(d,{type:"primary",onClick:n.createRoleSubmit},{default:s(()=>e[16]||(e[16]=[r("确定")])),_:1,__:[16]},8,["onClick"])])]),default:s(()=>[i(M,{model:l.roleForm,ref:"dialogForm","label-width":"100px",rules:l.rules},{default:s(()=>[i(b,{label:"角色名称",prop:"name"},{default:s(()=>[i(w,{modelValue:l.roleForm.name,"onUpdate:modelValue":e[0]||(e[0]=o=>l.roleForm.name=o),placeholder:"请输入角色名称"},null,8,["modelValue"])]),_:1}),i(b,{label:"描述",prop:"desc"},{default:s(()=>[i(w,{modelValue:l.roleForm.desc,"onUpdate:modelValue":e[1]||(e[1]=o=>l.roleForm.desc=o),placeholder:"请输入角色描述"},null,8,["modelValue"])]),_:1}),i(b,{label:"角色状态",prop:"status"},{default:s(()=>[i(I,{modelValue:l.roleForm.status,"onUpdate:modelValue":e[2]||(e[2]=o=>l.roleForm.status=o)},{default:s(()=>[i(C,{label:"1",value:1},{default:s(()=>e[13]||(e[13]=[r("正常")])),_:1,__:[13]}),i(C,{label:"2",value:2},{default:s(()=>e[14]||(e[14]=[r("禁用")])),_:1,__:[14]})]),_:1},8,["modelValue"])]),_:1})]),_:1},8,["model","rules"])]),_:1},8,["title","modelValue","onClose"]),i(y,{title:"绑定菜单权限",modelValue:l.menuDialogVisible,"onUpdate:modelValue":e[5]||(e[5]=o=>l.menuDialogVisible=o),width:"500px"},{footer:s(()=>[c("div",P,[i(d,{onClick:e[4]||(e[4]=o=>l.menuDialogVisible=!1)},{default:s(()=>e[17]||(e[17]=[r("取消")])),_:1,__:[17]}),i(d,{type:"primary",onClick:n.saveMenuAuth},{default:s(()=>e[18]||(e[18]=[r("保存")])),_:1,__:[18]},8,["onClick"])])]),default:s(()=>[i(R,{ref:"menuTree",data:l.menuTreeData,"show-checkbox":"","empty-text":"暂无权限设置菜单","node-key":"id",props:l.defaultProps,"default-checked-keys":l.selectedMenuIds,"check-strictly":!0},null,8,["data","props","default-checked-keys"])]),_:1},8,["modelValue"]),i(y,{title:"绑定接口权限",modelValue:l.apiDialogVisible,"onUpdate:modelValue":e[7]||(e[7]=o=>l.apiDialogVisible=o),width:"500px"},{footer:s(()=>[c("div",S,[i(d,{onClick:e[6]||(e[6]=o=>l.apiDialogVisible=!1)},{default:s(()=>e[19]||(e[19]=[r("取消")])),_:1,__:[19]}),i(d,{type:"primary",onClick:n.saveApiAuth},{default:s(()=>e[20]||(e[20]=[r("保存")])),_:1,__:[20]},8,["onClick"])])]),default:s(()=>[i(R,{ref:"apiTree",data:l.apiTreeData,"show-checkbox":"","empty-text":"暂无权限设置接口","node-key":"id",props:l.defaultApiProps,"default-checked-keys":l.selectedApsIds,"check-strictly":!1,"default-expand-all":""},null,8,["data","props","default-checked-keys"])]),_:1},8,["modelValue"])])}const q=F(x,[["render",E]]);export{q as default};
